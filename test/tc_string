#!/usr/bin/env ruby
require 'test/unit'
require 'rafini/string'

class TestString < Test::Unit::TestCase
  using Rafini::String

  def test_camelize
    assert_nothing_raised do
      s = 'a_camel_kick'
      c = s.camelize
      assert_equal('ACamelKick', c)
      k = 'a-camel-kick'
      c = k.camelize(/\W/)
      assert_equal('ACamelKick', c)
    end
  end

  def test_semantic
    assert_nothing_raised do
      assert_equal '1.2.3', '1.2.3.wut'.semantic
      assert_equal '1', '1.2.3'.semantic(0)
      assert_equal '2', '1.2.3'.semantic(1)
      assert_equal '3', '1.2.3'.semantic(2)
      assert_equal '1.2', '1.2.3'.semantic(0..1)
      assert_equal '2.3', '1.2.3'.semantic(1..2)
      assert_equal '3/4', '1.2.3.4.5'.semantic(2..3, join:'/')
      assert_equal '3.4', '1/2/3/4/5'.semantic(2..3, split:'/', join:'.')
    end
  end

  def test_shellescape
    s = "I know!\nAnd you?".shellescape
    assert_equal "I\\ know\\!'\n'And\\ you\\?", s
  end

  def test_name_cases
    n = 'My name is ruby'
    p = 'MyNameIsRuby'
    c = 'myNameIsRuby'
    s = 'my_name_is_ruby'
    k = 'my-name-is-ruby'
    [n, p, c, s, k].each do |name|
      assert_equal p, name.pascal_case
      assert_equal c, name.camel_case
      assert_equal s, name.snake_case
      assert_equal k, name.kebab_case
    end
  end
end
