#! ruby
require 'test/unit'
require 'rafini/array'

class TestArray < Test::Unit::TestCase
  using Rafini::Array

  def test_joins
    assert_nothing_raised() do
      a = ['a','b','c','d']
      x = ['x','y','z']
      assert_equal('axbyczd', a.joins(*x))
      assert_equal('a,b.cd', a.joins(',','.'))
      assert_equal('a-b:c:d', a.joins('-'){':'})

      assert_equal('', [].joins{'.'})
      assert_equal('a', ['a'].joins{'.'})
      assert_equal('a.b', ['a','b'].joins{'.'})

      assert_equal(
        '1<9>2<8>3<7>4<6>5=5',
        [1,9,2,8,3,7,4,6,5,5].joins{|a,b|a>b ? '>': a<b ? '<': '='})
      assert_equal(
        ['2021','Jan','09','07','29','05'].joins('-', '-', ' '){':'},
        '2021-Jan-09 07:29:05')
      assert_equal(
        'a-1+2.b,c',
        [:a,[1,2],[:b,'c']].joins(['-','+'],'.'){','})
      assert_equal('3.14159', [3,1,4,1,5,9].joins('.'))
    end
  end

  def test_per
    assert_nothing_raised() do
      a = ['a','b','c','d']
      b = ['A','B','C','D']

      h = {}
      a.per(b){|l,m| h[l]=m}
      assert_equal({'a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D'}, h)

      h = {}
      a.per{|l,i| h[l]=i}
      assert_equal({'a'=>0, 'b'=>1, 'c'=>2, 'd'=>3}, h)

      h = {}
      a.per{|l,i| h[l]=b[i]}
      assert_equal({'a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D'}, h)
    end
  end

  def test_is
    assert_nothing_raised() do
      h = {a: false, b: false, c: false}
      assert_equal({a: false, b: true, c: false, d: true}, [:b,:d].is(true,h))
      assert_equal({b: true, d: true}, [:b,:d].is(true))
    end
  end
end
