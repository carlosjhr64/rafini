#! ruby
require 'test/unit'
require 'rafini/hash'

class TestHash < Test::Unit::TestCase
  using Rafini::Hash

  def test_to_struct
    assert_nothing_raised() do
      h = {a:'A',b:'B',c:'C'}
      s = h.to_struct
      assert_equal('A',s.a)
      assert_equal('B',s.b)
      assert_equal('C',s.c)
      # Simple, what else you'd test?
    end
  end

  def test_modify
    assert_nothing_raised() do
      h = {a:'A',b:'B'}.modify({b:'X',c:'C'},{c:'Y',d:'D'})
      assert_equal({a:'A',b:'X',c:'Y',d:'D'}, h)
    end
  end

  def test_supplement
    assert_nothing_raised() do
      h = {a:'A',b:'B'}.supplement({b:'X',c:'C'},{c:'Y',d:'D'})
      assert_equal({a:'A',b:'B',c:'C',d:'D'}, h)
    end
  end

  def test_amend
    assert_nothing_raised() do
      h = {a:'A',b:'B'}.amend({b:'X',c:'C'},{c:'Y',d:'D'})
      assert_equal({a:'A',b:'X'}, h)
    end
  end
end
